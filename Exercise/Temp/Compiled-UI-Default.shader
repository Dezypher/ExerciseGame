// Compiled shader for PC, Mac & Linux Standalone, uncompressed size: 23.3KB

// Skipping shader variants that would not be included into build of current scene.

Shader "UI/Default" {
Properties {
[PerRendererData]  _MainTex ("Sprite Texture", 2D) = "white" { }
 _Color ("Tint", Color) = (1.000000,1.000000,1.000000,1.000000)
 _StencilComp ("Stencil Comparison", Float) = 8.000000
 _Stencil ("Stencil ID", Float) = 0.000000
 _StencilOp ("Stencil Operation", Float) = 0.000000
 _StencilWriteMask ("Stencil Write Mask", Float) = 255.000000
 _StencilReadMask ("Stencil Read Mask", Float) = 255.000000
 _ColorMask ("Color Mask", Float) = 15.000000
[Toggle(UNITY_UI_ALPHACLIP)]  _UseUIAlphaClip ("Use Alpha Clip", Float) = 0.000000
}
SubShader { 
 Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }


 // Stats for Vertex shader:
 //       d3d11 : 5 math
 //    d3d11_9x : 5 math
 //        d3d9 : 14 math
 // Stats for Fragment shader:
 //       d3d11 : 9 avg math (8..10), 1 texture
 //    d3d11_9x : 9 avg math (8..10), 1 texture
 //        d3d9 : 10 avg math (10..11), 1 avg texture (1..2)
 Pass {
  Name "DEFAULT"
  Tags { "QUEUE"="Transparent" "IGNOREPROJECTOR"="true" "RenderType"="Transparent" "PreviewType"="Plane" "CanUseSpriteAtlas"="true" }
  ZTest [unity_GUIZTestMode]
  ZWrite Off
  Cull Off
  Stencil {
   Ref [_Stencil]
   ReadMask [_StencilReadMask]
   WriteMask [_StencilWriteMask]
   Comp [_StencilComp]
   Pass [_StencilOp]
  }
  Blend SrcAlpha OneMinusSrcAlpha
  ColorMask [_ColorMask]
  GpuProgramID 6852
Program "vp" {
SubProgram "d3d9 " {
// Stats: 14 math
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 5 [_Color]
Vector 4 [_ScreenParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _ScreenParams;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   glstate_matrix_mvp c0       4
//   _ScreenParams      c4       1
//   _Color             c5       1
//

    vs_2_0
    def c6, 1, 0, -1, 0
    dcl_position v0
    dcl_color v1
    dcl_texcoord v2
    mad r0, v0.xyzx, c6.xxxy, c6.yyyx
    dp4 oPos.z, c2, r0
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r1.x, c3, r0
    mov r0.z, c6.z
    add r0.xy, r0.z, c4.zwzw
    mov r1.yz, c6.xxzw
    mul r0.xy, r0, r1
    mad oPos.xy, r0, r1.zxzw, r2
    mov oPos.w, r1.x
    mul oD0, v1, c5
    mov oT0.xy, v2
    mov oT1, v0

// approximately 14 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 5 math
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_constantbuffer cb1[4], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xy
      dcl_output o3.xyzw
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul o1.xyzw, v1.xyzw, cb0[6].xyzw
   5: mov o2.xy, v2.xyxx
   6: mov o3.xyzw, v0.xyzw
   7: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 5 math
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
   0:     mul oT0, v1, c1
   1:     mul r0, v0.y, c3
   2:     mad r0, c2, v0.x, r0
   3:     mad r0, c4, v0.z, r0
   4:     add r0, r0, c5
   5:     mad oPos.xy, r0.w, c0, r0
   6:     mov oPos.zw, r0
   7:     mov oT1.xy, v2
   8:     mov oT2, v0

// approximately 9 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_constantbuffer cb1[4], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xy
      dcl_output o3.xyzw
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul o1.xyzw, v1.xyzw, cb0[6].xyzw
   5: mov o2.xy, v2.xyxx
   6: mov o3.xyzw, v0.xyzw
   7: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d9 " {
// Stats: 14 math
Keywords { "UNITY_UI_ALPHACLIP" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Vector 5 [_Color]
Vector 4 [_ScreenParams]
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _Color;
//   float4 _ScreenParams;
//   row_major float4x4 glstate_matrix_mvp;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   glstate_matrix_mvp c0       4
//   _ScreenParams      c4       1
//   _Color             c5       1
//

    vs_2_0
    def c6, 1, 0, -1, 0
    dcl_position v0
    dcl_color v1
    dcl_texcoord v2
    mad r0, v0.xyzx, c6.xxxy, c6.yyyx
    dp4 oPos.z, c2, r0
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r1.x, c3, r0
    mov r0.z, c6.z
    add r0.xy, r0.z, c4.zwzw
    mov r1.yz, c6.xxzw
    mul r0.xy, r0, r1
    mad oPos.xy, r0, r1.zxzw, r2
    mov oPos.w, r1.x
    mul oD0, v1, c5
    mov oT0.xy, v2
    mov oT1, v0

// approximately 14 instruction slots used
"
}
SubProgram "d3d11 " {
// Stats: 5 math
Keywords { "UNITY_UI_ALPHACLIP" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_constantbuffer cb1[4], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xy
      dcl_output o3.xyzw
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul o1.xyzw, v1.xyzw, cb0[6].xyzw
   5: mov o2.xy, v2.xyxx
   6: mov o3.xyzw, v0.xyzw
   7: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 5 math
Keywords { "UNITY_UI_ALPHACLIP" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_Color]
ConstBuffer "UnityPerDraw" 352
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c1         cb0             6         1  ( FLT, FLT, FLT, FLT)
// c2         cb1             0         4  ( FLT, FLT, FLT, FLT)
//
//
// Runtime generated constant mappings:
//
// Target Reg                               Constant Description
// ---------- --------------------------------------------------
// c0                              Vertex Shader position offset
//
//
// Level9 shader bytecode:
//
    vs_2_0
          dcl_texcoord v0
          dcl_texcoord1 v1
          dcl_texcoord2 v2
   0:     mul oT0, v1, c1
   1:     mul r0, v0.y, c3
   2:     mad r0, c2, v0.x, r0
   3:     mad r0, c4, v0.z, r0
   4:     add r0, r0, c5
   5:     mad oPos.xy, r0.w, c0, r0
   6:     mov oPos.zw, r0
   7:     mov oT1.xy, v2
   8:     mov oT2, v0

// approximately 9 instruction slots used
      vs_4_0
      dcl_constantbuffer cb0[7], immediateIndexed
      dcl_constantbuffer cb1[4], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xy
      dcl_output o3.xyzw
      dcl_temps 1
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add o0.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul o1.xyzw, v1.xyzw, cb0[6].xyzw
   5: mov o2.xy, v2.xyxx
   6: mov o3.xyzw, v0.xyzw
   7: ret 
// Approximately 0 instruction slots used
"
}
}
Program "fp" {
SubProgram "d3d9 " {
// Stats: 10 math, 1 textures
Vector 1 [_ClipRect]
Vector 0 [_TextureSampleAdd]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _ClipRect;
//   sampler2D _MainTex;
//   float4 _TextureSampleAdd;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _TextureSampleAdd c0       1
//   _ClipRect         c1       1
//   _MainTex          s0       1
//

    ps_2_0
    def c2, 1, 0, 0, 0
    dcl v0
    dcl_pp t0.xy
    dcl t1.xy
    dcl_2d s0
    texld r0, t0, s0
    add r1.x, -t1.x, c1.z
    add r1.y, -t1.y, c1.w
    cmp r1.xy, r1, c2.x, c2.y
    add r1.zw, t1.wzyx, -c1.wzyx
    cmp r1.xy, r1.wzyx, r1, c2.y
    mul r1.x, r1.y, r1.x
    add r0, r0, c0
    mul_pp r0, r0, v0
    mul_pp r0.w, r1.x, r0.w
    mov_pp oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 8 math, 1 textures
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 112 [_TextureSampleAdd]
Vector 128 [_ClipRect]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xy
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: ge r0.xy, v3.xyxx, cb0[8].xyxx
   1: ge r0.zw, cb0[8].zzzw, v3.xxxy
   2: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
   3: mul r0.xy, r0.zwzz, r0.xyxx
   4: mul r0.x, r0.y, r0.x
   5: sample r1.xyzw, v2.xyxx, t0.xyzw, s0
   6: add r1.xyzw, r1.xyzw, cb0[7].xyzw
   7: mul r1.xyzw, r1.xyzw, v1.xyzw
   8: mul o0.w, r0.x, r1.w
   9: mov o0.xyz, r1.xyzx
  10: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 8 math, 1 textures
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 112 [_TextureSampleAdd]
Vector 128 [_ClipRect]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             7         2  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c2, 1, 0, 0, 0
          dcl t0
          dcl_pp t1.xy
          dcl t2
          dcl_2d s0
   0:     texld r0, t1, s0
   0:     add r1.x, -t2.x, c1.z
   1:     add r1.y, -t2.y, c1.w
   2:     cmp r1.xy, r1, c2.x, c2.y
   3:     add r1.zw, t2.wzyx, -c1.wzyx
   4:     cmp r1.xy, r1.wzyx, r1, c2.y
   5:     mul r1.x, r1.y, r1.x
   6:     add r0, r0, c0
   7:     mul_pp r0, r0, t0
   8:     mul_pp r0.w, r1.x, r0.w
   9:     mov_pp oC0, r0

// approximately 11 instruction slots used (1 texture, 10 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xy
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: ge r0.xy, v3.xyxx, cb0[8].xyxx
   1: ge r0.zw, cb0[8].zzzw, v3.xxxy
   2: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
   3: mul r0.xy, r0.zwzz, r0.xyxx
   4: mul r0.x, r0.y, r0.x
   5: sample r1.xyzw, v2.xyxx, t0.xyzw, s0
   6: add r1.xyzw, r1.xyzw, cb0[7].xyzw
   7: mul r1.xyzw, r1.xyzw, v1.xyzw
   8: mul o0.w, r0.x, r1.w
   9: mov o0.xyz, r1.xyzx
  10: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d9 " {
// Stats: 11 math, 2 textures
Keywords { "UNITY_UI_ALPHACLIP" }
Vector 1 [_ClipRect]
Vector 0 [_TextureSampleAdd]
SetTexture 0 [_MainTex] 2D 0
"//
// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9431.0
//
// Parameters:
//
//   float4 _ClipRect;
//   sampler2D _MainTex;
//   float4 _TextureSampleAdd;
//
//
// Registers:
//
//   Name              Reg   Size
//   ----------------- ----- ----
//   _TextureSampleAdd c0       1
//   _ClipRect         c1       1
//   _MainTex          s0       1
//

    ps_2_0
    def c2, 1, 0, -0.00100000005, 0
    dcl v0
    dcl_pp t0.xy
    dcl t1.xy
    dcl_2d s0
    texld r0, t0, s0
    add r1.x, -t1.x, c1.z
    add r1.y, -t1.y, c1.w
    cmp r1.xy, r1, c2.x, c2.y
    add r1.zw, t1.wzyx, -c1.wzyx
    cmp r1.xy, r1.wzyx, r1, c2.y
    mul r1.x, r1.y, r1.x
    add r0, r0, c0
    mul_pp r0, r0, v0
    mad_pp r2, r0.w, r1.x, c2.z
    mul_pp r0.w, r1.x, r0.w
    mov_pp oC0, r0
    texkill r2

// approximately 13 instruction slots used (1 texture, 12 arithmetic)
"
}
SubProgram "d3d11 " {
// Stats: 10 math, 1 textures
Keywords { "UNITY_UI_ALPHACLIP" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 112 [_TextureSampleAdd]
Vector 128 [_ClipRect]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xy
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: ge r0.xy, v3.xyxx, cb0[8].xyxx
   1: ge r0.zw, cb0[8].zzzw, v3.xxxy
   2: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
   3: mul r0.xy, r0.zwzz, r0.xyxx
   4: mul r0.x, r0.y, r0.x
   5: sample r1.xyzw, v2.xyxx, t0.xyzw, s0
   6: add r1.xyzw, r1.xyzw, cb0[7].xyzw
   7: mul r1.xyzw, r1.xyzw, v1.xyzw
   8: mad r0.y, r1.w, r0.x, l(-0.001000)
   9: mul r0.x, r0.x, r1.w
  10: mov o0.xyz, r1.xyzx
  11: mov o0.w, r0.x
  12: lt r0.x, r0.y, l(0.000000)
  13: discard_nz r0.x
  14: ret 
// Approximately 0 instruction slots used
"
}
SubProgram "d3d11_9x " {
// Stats: 10 math, 1 textures
Keywords { "UNITY_UI_ALPHACLIP" }
SetTexture 0 [_MainTex] 2D 0
ConstBuffer "$Globals" 144
Vector 112 [_TextureSampleAdd]
Vector 128 [_ClipRect]
BindCB  "$Globals" 0
"//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             7         2  ( FLT, FLT, FLT, FLT)
//
//
// Sampler/Resource to DX9 shader sampler mappings:
//
// Target Sampler Source Sampler  Source Resource
// -------------- --------------- ----------------
// s0             s0              t0               
//
//
// Level9 shader bytecode:
//
    ps_2_0
          def c2, 1, 0, -0.00100000005, 0
          dcl t0
          dcl_pp t1.xy
          dcl t2
          dcl_2d s0
   0:     texld r0, t1, s0
   0:     add r1.x, -t2.x, c1.z
   1:     add r1.y, -t2.y, c1.w
   2:     cmp r1.xy, r1, c2.x, c2.y
   3:     add r1.zw, t2.wzyx, -c1.wzyx
   4:     cmp r1.xy, r1.wzyx, r1, c2.y
   5:     mul r1.x, r1.y, r1.x
   6:     add r0, r0, c0
   7:     mul_pp r0, r0, t0
   8:     mad_pp r2, r0.w, r1.x, c2.z
   9:     mul_pp r0.w, r1.x, r0.w
  10:     mov_pp oC0, r0
  11:     texkill r2

// approximately 13 instruction slots used (1 texture, 12 arithmetic)
      ps_4_0
      dcl_constantbuffer cb0[9], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xy
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 2
   0: ge r0.xy, v3.xyxx, cb0[8].xyxx
   1: ge r0.zw, cb0[8].zzzw, v3.xxxy
   2: and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
   3: mul r0.xy, r0.zwzz, r0.xyxx
   4: mul r0.x, r0.y, r0.x
   5: sample r1.xyzw, v2.xyxx, t0.xyzw, s0
   6: add r1.xyzw, r1.xyzw, cb0[7].xyzw
   7: mul r1.xyzw, r1.xyzw, v1.xyzw
   8: mad r0.y, r1.w, r0.x, l(-0.001000)
   9: mul r0.x, r0.x, r1.w
  10: mov o0.xyz, r1.xyzx
  11: mov o0.w, r0.x
  12: lt r0.x, r0.y, l(0.000000)
  13: discard_nz r0.x
  14: ret 
// Approximately 0 instruction slots used
"
}
}
 }
}
}